/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.maizer.text.test;

public final class R {
    public static final class attr {
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00</td><td> Match no patterns (default). </td></tr>
<tr><td><code>web</code></td><td>0x01</td><td> Match Web URLs. </td></tr>
<tr><td><code>email</code></td><td>0x02</td><td> Match email addresses. </td></tr>
<tr><td><code>phone</code></td><td>0x04</td><td> Match phone numbers. </td></tr>
<tr><td><code>map</code></td><td>0x08</td><td> Match map addresses. </td></tr>
<tr><td><code>all</code></td><td>0x0f</td><td> Match all patterns (equivalent to web|email|phone|map). </td></tr>
</table>
         */
        public static final int autoLink=0x7f010004;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't automatically capitalize anything. </td></tr>
<tr><td><code>sentences</code></td><td>1</td><td> Capitalize the first word of each sentence. </td></tr>
<tr><td><code>words</code></td><td>2</td><td> Capitalize the first letter of every word. </td></tr>
<tr><td><code>characters</code></td><td>3</td><td> Capitalize every character. </td></tr>
</table>
         */
        public static final int capitalize=0x7f010037;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int compoundDrawable_Bottom=0x7f010027;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundDrawable_BottomHeight=0x7f010029;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundDrawable_BottomWidth=0x7f010028;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundDrawable_Height=0x7f01002a;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int compoundDrawable_Left=0x7f01001e;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundDrawable_LeftHeight=0x7f010020;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundDrawable_LeftWidth=0x7f01001f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int compoundDrawable_Right=0x7f010023;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundDrawable_RightHeight=0x7f010022;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundDrawable_RightWidth=0x7f010021;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int compoundDrawable_Top=0x7f010024;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundDrawable_TopHeight=0x7f010026;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundDrawable_TopWidth=0x7f010025;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundDrawable_Width=0x7f01002b;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundPadding_Bottom=0x7f01001d;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundPadding_Left=0x7f01001a;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundPadding_Right=0x7f01001b;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compoundPadding_Top=0x7f01001c;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int cursorDrawable=0x7f01002d;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cursorMinWidth=0x7f01002e;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cursorVisible=0x7f010035;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int editable=0x7f010016;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fontFamily=0x7f010034;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.









        </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.









        </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
         */
        public static final int gravity=0x7f010003;
        /**  Hint text to display when the text is empty. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hint=0x7f010011;
        /**  Hint Text color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int hintColor=0x7f010012;
        /**  Hint Text size. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hintSize=0x7f010014;
        /** 
             Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
             used when an input method is connected to the text view.









        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imeActionId=0x7f01003b;
        /** 
             Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
             used when an input method is connected to the text view.









        
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imeActionLabel=0x7f01003a;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0x00000000</td><td> There are no special semantics associated with this editor. </td></tr>
<tr><td><code>actionUnspecified</code></td><td>0x00000000</td><td>
             There is no specific action associated with this editor, let the
             editor come up with its own if it can.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_NULL}.









        </td></tr>
<tr><td><code>actionNone</code></td><td>0x00000001</td><td>
             This editor has no action associated with it.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}.









        </td></tr>
<tr><td><code>actionGo</code></td><td>0x00000002</td><td>
             The action key performs a "go"
             operation to take the user to the target of the text they typed.
             Typically used, for example, when entering a URL.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}.









        </td></tr>
<tr><td><code>actionSearch</code></td><td>0x00000003</td><td>
             The action key performs a "search"
             operation, taking the user to the results of searching for the text
             the have typed (in whatever context is appropriate).
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}.









        </td></tr>
<tr><td><code>actionSend</code></td><td>0x00000004</td><td>
             The action key performs a "send"
             operation, delivering the text to its target.  This is typically used
             when composing a message.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}.









        </td></tr>
<tr><td><code>actionNext</code></td><td>0x00000005</td><td>
             The action key performs a "next"
             operation, taking the user to the next field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}.









        </td></tr>
<tr><td><code>actionDone</code></td><td>0x00000006</td><td>
             The action key performs a "done"
             operation, closing the soft input method.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}.









        </td></tr>
<tr><td><code>actionPrevious</code></td><td>0x00000007</td><td>
             The action key performs a "previous"
             operation, taking the user to the previous field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_PREVIOUS}.









        </td></tr>
<tr><td><code>flagNoFullscreen</code></td><td>0x2000000</td><td>
             Used to request that the IME never go
             into fullscreen mode.  Applications need to be aware that the flag is not
             a guarantee, and not all IMEs will respect it.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}.









        </td></tr>
<tr><td><code>flagNavigatePrevious</code></td><td>0x4000000</td><td>
             Like flagNavigateNext, but
             specifies there is something interesting that a backward navigation
             can focus on.  If the user selects the IME's facility to backward
             navigate, this will show up in the application as an actionPrevious
             at {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}.











        </td></tr>
<tr><td><code>flagNavigateNext</code></td><td>0x8000000</td><td>
             Used to specify that there is something
             interesting that a forward navigation can focus on. This is like using
             actionNext, except allows the IME to be multiline (with
             an enter key) as well as provide forward navigation.  Note that some
             IMEs may not be able to do this, especially when running on a small
             screen where there is little space.  In that case it does not need to
             present a UI for this option.  Like actionNext, if the
             user selects the IME's facility to forward navigate, this will show up
             in the application at
             {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NAVIGATE_NEXT}.











        </td></tr>
<tr><td><code>flagNoExtractUi</code></td><td>0x10000000</td><td>
             Used to specify that the IME does not need
             to show its extracted text UI.  For input methods that may be fullscreen,
             often when in landscape mode, this allows them to be smaller and let part
             of the application be shown behind.  Though there will likely be limited
             access to the application available from the user, it can make the
             experience of a (mostly) fullscreen IME less jarring.  Note that when
             this flag is specified the IME may <em>not</em> be set up to be able
             to display text, so it should only be used in situations where this is
             not needed.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}.









        </td></tr>
<tr><td><code>flagNoAccessoryAction</code></td><td>0x20000000</td><td>
             Used in conjunction with a custom action, this indicates that the
             action should not be available as an accessory button when the
             input method is full-screen.
             Note that by setting this flag, there can be cases where the action
             is simply never available to the user.  Setting this generally means
             that you think showing text being edited is more important than the
             action you have supplied.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}.









        </td></tr>
<tr><td><code>flagNoEnterAction</code></td><td>0x40000000</td><td>
             Used in conjunction with a custom action,
             this indicates that the action should not be available in-line as
             a replacement for the "enter" key.  Typically this is
             because the action has such a significant impact or is not recoverable
             enough that accidentally hitting it should be avoided, such as sending
             a message.    Note that {@link android.widget.TextView} will
             automatically set this flag for you on multi-line text views.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}.









        </td></tr>
<tr><td><code>flagForceAscii</code></td><td>0x80000000</td><td>
             Used to request that the IME should be capable of inputting ASCII
             characters.  The intention of this flag is to ensure that the user
             can type Roman alphabet characters in a {@link android.widget.TextView}
             used for, typically, account ID or password input.  It is expected that IMEs
             normally are able to input ASCII even without being told so (such IMEs
             already respect this flag in a sense), but there could be some cases they
             aren't when, for instance, only non-ASCII input languagaes like Arabic,
             Greek, Hebrew, Russian are enabled in the IME.  Applications need to be
             aware that the flag is not a guarantee, and not all IMEs will respect it.
             However, it is strongly recommended for IME authors to respect this flag
             especially when their IME could end up with a state that has only non-ASCII
             input languages enabled.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_FORCE_ASCII}.









        </td></tr>
</table>
         */
        public static final int imeOptions=0x7f010001;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int initArraySize=0x7f01000c;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type.  The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td>
             Just plain old text.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}.









        </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td>
             Can be combined with <var>text</var> and its variations to
             request capitalization of all characters.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}.







        </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td>
             Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every word.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}.







        </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td>
             Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every sentence.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}.







        </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td>
             Can be combined with <var>text</var> and its variations to
             request auto-correction of text being input.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}.







        </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td>
             Can be combined with <var>text</var> and its variations to
             specify that this field will be doing its own auto-completion and
             talking with the input method appropriately.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}.







        </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td>
             Can be combined with <var>text</var> and its variations to
             allow multiple lines of text in the field.  If this flag is not set,
             the text field will be constrained to a single line.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}.







        </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td>
             Can be combined with <var>text</var> and its variations to
             indicate that though the regular text view should not be multiple
             lines, the IME should provide multiple lines if it can.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}.







        </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td>
             Can be combined with <var>text</var> and its variations to
             indicate that the IME should not show any
             dictionary-based word suggestions.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}.







        </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td>
             Text that will be used as a URI.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}.







        </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td>
             Text that will be used as an e-mail address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}.







        </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td>
             Text that is being supplied as the subject of an e-mail.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}.







        </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td>
             Text that is the content of a short message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}.







        </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td>
             Text that is the content of a long message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}.







        </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td>
             Text that is the name of a person.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}.







        </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td>
             Text that is being supplied as a postal mailing address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}.







        </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td>
             Text that is a password.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}.







        </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td>
             Text that is a password that should be visible.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}.







        </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td>
             Text that is being supplied as text in a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}.







        </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td>
             Text that is filtering some other data.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}.









        </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td>
             Text that is for phonetic pronunciation, such as a phonetic name
             field in a contact entry.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}.









        </td></tr>
<tr><td><code>textWebEmailAddress</code></td><td>0x000000d1</td><td>
             Text that will be used as an e-mail address on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS}.









        </td></tr>
<tr><td><code>textWebPassword</code></td><td>0x000000e1</td><td>
             Text that will be used as a password on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_PASSWORD}.









        </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td>
             A numeric only field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_NORMAL}.









        </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td>
             Can be combined with <var>number</var> and its other options to
             allow a signed number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}.









        </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td>
             Can be combined with <var>number</var> and its other options to
             allow a decimal (fractional) number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}.









        </td></tr>
<tr><td><code>numberPassword</code></td><td>0x00000012</td><td>
             A numeric password field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_PASSWORD}.









        </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td>
             For entering a phone number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_PHONE}.









        </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td>
             For entering a date and time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}.









        </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td>
             For entering a date.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}.









        </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td>
             For entering a time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}.









        </td></tr>
</table>
         */
        public static final int inputType=0x7f010000;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int letterSpacing=0x7f010007;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int lineSpacing_Add=0x7f010008;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int lineSpacing_Mult=0x7f010009;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxEms=0x7f010005;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxLines=0x7f01000b;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxLines_limitheight=0x7f01000a;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusBottom=0x7f010033;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusLeft=0x7f010030;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusRight=0x7f010031;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusTop=0x7f010032;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int outTouch=0x7f010019;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int phoneNumber=0x7f010036;
        /** 
             An addition content type description to supply to the input
             method attached to the text view, which is private to the
             implementation of the input method.  This simply fills in
             the {@link android.view.inputmethod.EditorInfo#privateImeOptions
             EditorInfo.privateImeOptions} field when the input
             method is connected.









        
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int privateImeOptions=0x7f010039;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int receiveOutTouch=0x7f010006;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>width</code></td><td>0</td><td></td></tr>
<tr><td><code>height</code></td><td>1</td><td></td></tr>
</table>
         */
        public static final int scaleBase=0x7f010013;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int seletable=0x7f010018;
        /**  @hide 是否共享游标,默认为共享的,我将隐藏,不建议设置 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shareCursorDevicer=0x7f010017;
        /**  Text to display. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int text=0x7f01000e;
        /**  Text color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColor=0x7f010010;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorLink=0x7f010015;
        /**  Color of the text selection highlight. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textHighlightDrawable=0x7f01002c;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textScaleX=0x7f01002f;
        /**  Text size. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textSize=0x7f01000f;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
         */
        public static final int textStyle=0x7f010002;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>start</code></td><td>1</td><td></td></tr>
<tr><td><code>end</code></td><td>2</td><td></td></tr>
<tr><td><code>middle</code></td><td>3</td><td></td></tr>
<tr><td><code>marquee</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int truncateAt=0x7f01000d;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int typeface=0x7f010038;
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 

         Example customization of dimensions originally defined in res/values/dimens.xml
         (such as screen margins) for screens with more than 820dp of available width. This
         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively).
    
         */
        public static final int activity_horizontal_margin=0x7f060000;
        public static final int activity_vertical_margin=0x7f060001;
    }
    public static final class drawable {
        public static final int ic_launcher=0x7f020000;
    }
    public static final class id {
        public static final int actionDone=0x7f070020;
        public static final int actionGo=0x7f070021;
        public static final int actionNext=0x7f070022;
        public static final int actionNone=0x7f070023;
        public static final int actionPrevious=0x7f070024;
        public static final int actionSearch=0x7f070025;
        public static final int actionSend=0x7f070026;
        public static final int actionUnspecified=0x7f070027;
        public static final int all=0x7f070040;
        public static final int bold=0x7f070030;
        public static final int bottom=0x7f070032;
        public static final int center=0x7f070033;
        public static final int center_horizontal=0x7f070034;
        public static final int center_vertical=0x7f070035;
        public static final int characters=0x7f070048;
        public static final int clip_horizontal=0x7f070036;
        public static final int clip_vertical=0x7f070037;
        public static final int date=0x7f070000;
        public static final int datetime=0x7f070001;
        public static final int email=0x7f070041;
        public static final int end=0x7f070038;
        public static final int fill=0x7f070039;
        public static final int fill_horizontal=0x7f07003a;
        public static final int fill_vertical=0x7f07003b;
        public static final int flagForceAscii=0x7f070028;
        public static final int flagNavigateNext=0x7f070029;
        public static final int flagNavigatePrevious=0x7f07002a;
        public static final int flagNoAccessoryAction=0x7f07002b;
        public static final int flagNoEnterAction=0x7f07002c;
        public static final int flagNoExtractUi=0x7f07002d;
        public static final int flagNoFullscreen=0x7f07002e;
        public static final int height=0x7f070046;
        public static final int italic=0x7f070031;
        public static final int left=0x7f07003c;
        public static final int listview=0x7f07004f;
        public static final int map=0x7f070042;
        public static final int marquee=0x7f070044;
        public static final int middle=0x7f070045;
        public static final int monospace=0x7f07004b;
        public static final int none=0x7f070002;
        public static final int normal=0x7f07002f;
        public static final int number=0x7f070003;
        public static final int numberDecimal=0x7f070004;
        public static final int numberPassword=0x7f070005;
        public static final int numberSigned=0x7f070006;
        public static final int phone=0x7f070007;
        public static final int right=0x7f07003d;
        public static final int sans=0x7f07004c;
        public static final int sentences=0x7f070049;
        public static final int serif=0x7f07004d;
        public static final int start=0x7f07003e;
        public static final int t1=0x7f07004e;
        public static final int text=0x7f070008;
        public static final int textAutoComplete=0x7f070009;
        public static final int textAutoCorrect=0x7f07000a;
        public static final int textCapCharacters=0x7f07000b;
        public static final int textCapSentences=0x7f07000c;
        public static final int textCapWords=0x7f07000d;
        public static final int textEmailAddress=0x7f07000e;
        public static final int textEmailSubject=0x7f07000f;
        public static final int textFilter=0x7f070010;
        public static final int textImeMultiLine=0x7f070011;
        public static final int textLongMessage=0x7f070012;
        public static final int textMultiLine=0x7f070013;
        public static final int textNoSuggestions=0x7f070014;
        public static final int textPassword=0x7f070015;
        public static final int textPersonName=0x7f070016;
        public static final int textPhonetic=0x7f070017;
        public static final int textPostalAddress=0x7f070018;
        public static final int textShortMessage=0x7f070019;
        public static final int textUri=0x7f07001a;
        public static final int textVisiblePassword=0x7f07001b;
        public static final int textWebEditText=0x7f07001c;
        public static final int textWebEmailAddress=0x7f07001d;
        public static final int textWebPassword=0x7f07001e;
        public static final int time=0x7f07001f;
        public static final int top=0x7f07003f;
        public static final int web=0x7f070043;
        public static final int width=0x7f070047;
        public static final int words=0x7f07004a;
    }
    public static final class layout {
        public static final int activity_main=0x7f030000;
        public static final int fragment_main=0x7f030001;
        public static final int i_listview=0x7f030002;
        public static final int i_text=0x7f030003;
        public static final int i_textview=0x7f030004;
    }
    public static final class string {
        public static final int app_name=0x7f040000;
        public static final int app_null=0x7f040001;
        public static final int hint1=0x7f040003;
        public static final int hint10=0x7f04000c;
        public static final int hint11=0x7f04000d;
        public static final int hint12=0x7f04000e;
        public static final int hint13=0x7f04000f;
        public static final int hint2=0x7f040004;
        public static final int hint3=0x7f040005;
        public static final int hint4=0x7f040006;
        public static final int hint5=0x7f040007;
        public static final int hint6=0x7f040008;
        public static final int hint7=0x7f040009;
        public static final int hint8=0x7f04000a;
        public static final int hint9=0x7f04000b;
        public static final int hint_size=0x7f040002;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 

        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 

        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        
         */
        public static final int AppBaseTheme=0x7f050000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
 Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
 Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f050001;
    }
    public static final class styleable {
        /** Attributes that can be used with a TextAreaView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextAreaView_capitalize com.maizer.text.test:capitalize}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_Bottom com.maizer.text.test:compoundDrawable_Bottom}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_BottomHeight com.maizer.text.test:compoundDrawable_BottomHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_BottomWidth com.maizer.text.test:compoundDrawable_BottomWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_Height com.maizer.text.test:compoundDrawable_Height}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_Left com.maizer.text.test:compoundDrawable_Left}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_LeftHeight com.maizer.text.test:compoundDrawable_LeftHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_LeftWidth com.maizer.text.test:compoundDrawable_LeftWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_Right com.maizer.text.test:compoundDrawable_Right}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_RightHeight com.maizer.text.test:compoundDrawable_RightHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_RightWidth com.maizer.text.test:compoundDrawable_RightWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_Top com.maizer.text.test:compoundDrawable_Top}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_TopHeight com.maizer.text.test:compoundDrawable_TopHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_TopWidth com.maizer.text.test:compoundDrawable_TopWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundDrawable_Width com.maizer.text.test:compoundDrawable_Width}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundPadding_Bottom com.maizer.text.test:compoundPadding_Bottom}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundPadding_Left com.maizer.text.test:compoundPadding_Left}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundPadding_Right com.maizer.text.test:compoundPadding_Right}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_compoundPadding_Top com.maizer.text.test:compoundPadding_Top}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_cursorDrawable com.maizer.text.test:cursorDrawable}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_cursorMinWidth com.maizer.text.test:cursorMinWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_cursorVisible com.maizer.text.test:cursorVisible}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_editable com.maizer.text.test:editable}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_fontFamily com.maizer.text.test:fontFamily}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_gravity com.maizer.text.test:gravity}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_hint com.maizer.text.test:hint}</code></td><td> Hint text to display when the text is empty.</td></tr>
           <tr><td><code>{@link #TextAreaView_hintColor com.maizer.text.test:hintColor}</code></td><td> Hint Text color.</td></tr>
           <tr><td><code>{@link #TextAreaView_hintSize com.maizer.text.test:hintSize}</code></td><td> Hint Text size.</td></tr>
           <tr><td><code>{@link #TextAreaView_imeActionId com.maizer.text.test:imeActionId}</code></td><td>
             Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
             used when an input method is connected to the text view.</td></tr>
           <tr><td><code>{@link #TextAreaView_imeActionLabel com.maizer.text.test:imeActionLabel}</code></td><td>
             Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
             used when an input method is connected to the text view.</td></tr>
           <tr><td><code>{@link #TextAreaView_imeOptions com.maizer.text.test:imeOptions}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_initArraySize com.maizer.text.test:initArraySize}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_inputType com.maizer.text.test:inputType}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_letterSpacing com.maizer.text.test:letterSpacing}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_lineSpacing_Add com.maizer.text.test:lineSpacing_Add}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_lineSpacing_Mult com.maizer.text.test:lineSpacing_Mult}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_maxEms com.maizer.text.test:maxEms}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_maxLines com.maizer.text.test:maxLines}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_maxLines_limitheight com.maizer.text.test:maxLines_limitheight}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_nextFocusBottom com.maizer.text.test:nextFocusBottom}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_nextFocusLeft com.maizer.text.test:nextFocusLeft}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_nextFocusRight com.maizer.text.test:nextFocusRight}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_nextFocusTop com.maizer.text.test:nextFocusTop}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_outTouch com.maizer.text.test:outTouch}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_phoneNumber com.maizer.text.test:phoneNumber}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_privateImeOptions com.maizer.text.test:privateImeOptions}</code></td><td>
             An addition content type description to supply to the input
             method attached to the text view, which is private to the
             implementation of the input method.</td></tr>
           <tr><td><code>{@link #TextAreaView_receiveOutTouch com.maizer.text.test:receiveOutTouch}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_scaleBase com.maizer.text.test:scaleBase}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_seletable com.maizer.text.test:seletable}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_shareCursorDevicer com.maizer.text.test:shareCursorDevicer}</code></td><td> @hide 是否共享游标,默认为共享的,我将隐藏,不建议设置 </td></tr>
           <tr><td><code>{@link #TextAreaView_text com.maizer.text.test:text}</code></td><td> Text to display.</td></tr>
           <tr><td><code>{@link #TextAreaView_textColor com.maizer.text.test:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #TextAreaView_textColorLink com.maizer.text.test:textColorLink}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_textHighlightDrawable com.maizer.text.test:textHighlightDrawable}</code></td><td> Color of the text selection highlight.</td></tr>
           <tr><td><code>{@link #TextAreaView_textScaleX com.maizer.text.test:textScaleX}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_textSize com.maizer.text.test:textSize}</code></td><td> Text size.</td></tr>
           <tr><td><code>{@link #TextAreaView_textStyle com.maizer.text.test:textStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_truncateAt com.maizer.text.test:truncateAt}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAreaView_typeface com.maizer.text.test:typeface}</code></td><td></td></tr>
           </table>
           @see #TextAreaView_capitalize
           @see #TextAreaView_compoundDrawable_Bottom
           @see #TextAreaView_compoundDrawable_BottomHeight
           @see #TextAreaView_compoundDrawable_BottomWidth
           @see #TextAreaView_compoundDrawable_Height
           @see #TextAreaView_compoundDrawable_Left
           @see #TextAreaView_compoundDrawable_LeftHeight
           @see #TextAreaView_compoundDrawable_LeftWidth
           @see #TextAreaView_compoundDrawable_Right
           @see #TextAreaView_compoundDrawable_RightHeight
           @see #TextAreaView_compoundDrawable_RightWidth
           @see #TextAreaView_compoundDrawable_Top
           @see #TextAreaView_compoundDrawable_TopHeight
           @see #TextAreaView_compoundDrawable_TopWidth
           @see #TextAreaView_compoundDrawable_Width
           @see #TextAreaView_compoundPadding_Bottom
           @see #TextAreaView_compoundPadding_Left
           @see #TextAreaView_compoundPadding_Right
           @see #TextAreaView_compoundPadding_Top
           @see #TextAreaView_cursorDrawable
           @see #TextAreaView_cursorMinWidth
           @see #TextAreaView_cursorVisible
           @see #TextAreaView_editable
           @see #TextAreaView_fontFamily
           @see #TextAreaView_gravity
           @see #TextAreaView_hint
           @see #TextAreaView_hintColor
           @see #TextAreaView_hintSize
           @see #TextAreaView_imeActionId
           @see #TextAreaView_imeActionLabel
           @see #TextAreaView_imeOptions
           @see #TextAreaView_initArraySize
           @see #TextAreaView_inputType
           @see #TextAreaView_letterSpacing
           @see #TextAreaView_lineSpacing_Add
           @see #TextAreaView_lineSpacing_Mult
           @see #TextAreaView_maxEms
           @see #TextAreaView_maxLines
           @see #TextAreaView_maxLines_limitheight
           @see #TextAreaView_nextFocusBottom
           @see #TextAreaView_nextFocusLeft
           @see #TextAreaView_nextFocusRight
           @see #TextAreaView_nextFocusTop
           @see #TextAreaView_outTouch
           @see #TextAreaView_phoneNumber
           @see #TextAreaView_privateImeOptions
           @see #TextAreaView_receiveOutTouch
           @see #TextAreaView_scaleBase
           @see #TextAreaView_seletable
           @see #TextAreaView_shareCursorDevicer
           @see #TextAreaView_text
           @see #TextAreaView_textColor
           @see #TextAreaView_textColorLink
           @see #TextAreaView_textHighlightDrawable
           @see #TextAreaView_textScaleX
           @see #TextAreaView_textSize
           @see #TextAreaView_textStyle
           @see #TextAreaView_truncateAt
           @see #TextAreaView_typeface
         */
        public static final int[] TextAreaView = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008,
            0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c,
            0x7f01000d, 0x7f01000e, 0x7f01000f, 0x7f010010,
            0x7f010011, 0x7f010012, 0x7f010013, 0x7f010014,
            0x7f010015, 0x7f010016, 0x7f010017, 0x7f010018,
            0x7f010019, 0x7f01001a, 0x7f01001b, 0x7f01001c,
            0x7f01001d, 0x7f01001e, 0x7f01001f, 0x7f010020,
            0x7f010021, 0x7f010022, 0x7f010023, 0x7f010024,
            0x7f010025, 0x7f010026, 0x7f010027, 0x7f010028,
            0x7f010029, 0x7f01002a, 0x7f01002b, 0x7f01002c,
            0x7f01002d, 0x7f01002e, 0x7f01002f, 0x7f010030,
            0x7f010031, 0x7f010032, 0x7f010033, 0x7f010034,
            0x7f010035, 0x7f010036, 0x7f010037, 0x7f010038,
            0x7f010039, 0x7f01003a, 0x7f01003b
        };
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#capitalize}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't automatically capitalize anything. </td></tr>
<tr><td><code>sentences</code></td><td>1</td><td> Capitalize the first word of each sentence. </td></tr>
<tr><td><code>words</code></td><td>2</td><td> Capitalize the first letter of every word. </td></tr>
<tr><td><code>characters</code></td><td>3</td><td> Capitalize every character. </td></tr>
</table>
          @attr name com.maizer.text.test:capitalize
        */
        public static final int TextAreaView_capitalize = 54;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_Bottom}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.maizer.text.test:compoundDrawable_Bottom
        */
        public static final int TextAreaView_compoundDrawable_Bottom = 38;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_BottomHeight}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundDrawable_BottomHeight
        */
        public static final int TextAreaView_compoundDrawable_BottomHeight = 40;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_BottomWidth}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundDrawable_BottomWidth
        */
        public static final int TextAreaView_compoundDrawable_BottomWidth = 39;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_Height}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundDrawable_Height
        */
        public static final int TextAreaView_compoundDrawable_Height = 41;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_Left}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.maizer.text.test:compoundDrawable_Left
        */
        public static final int TextAreaView_compoundDrawable_Left = 29;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_LeftHeight}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundDrawable_LeftHeight
        */
        public static final int TextAreaView_compoundDrawable_LeftHeight = 31;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_LeftWidth}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundDrawable_LeftWidth
        */
        public static final int TextAreaView_compoundDrawable_LeftWidth = 30;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_Right}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.maizer.text.test:compoundDrawable_Right
        */
        public static final int TextAreaView_compoundDrawable_Right = 34;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_RightHeight}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundDrawable_RightHeight
        */
        public static final int TextAreaView_compoundDrawable_RightHeight = 33;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_RightWidth}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundDrawable_RightWidth
        */
        public static final int TextAreaView_compoundDrawable_RightWidth = 32;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_Top}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.maizer.text.test:compoundDrawable_Top
        */
        public static final int TextAreaView_compoundDrawable_Top = 35;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_TopHeight}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundDrawable_TopHeight
        */
        public static final int TextAreaView_compoundDrawable_TopHeight = 37;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_TopWidth}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundDrawable_TopWidth
        */
        public static final int TextAreaView_compoundDrawable_TopWidth = 36;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundDrawable_Width}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundDrawable_Width
        */
        public static final int TextAreaView_compoundDrawable_Width = 42;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundPadding_Bottom}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundPadding_Bottom
        */
        public static final int TextAreaView_compoundPadding_Bottom = 28;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundPadding_Left}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundPadding_Left
        */
        public static final int TextAreaView_compoundPadding_Left = 25;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundPadding_Right}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundPadding_Right
        */
        public static final int TextAreaView_compoundPadding_Right = 26;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#compoundPadding_Top}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:compoundPadding_Top
        */
        public static final int TextAreaView_compoundPadding_Top = 27;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#cursorDrawable}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name com.maizer.text.test:cursorDrawable
        */
        public static final int TextAreaView_cursorDrawable = 44;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#cursorMinWidth}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:cursorMinWidth
        */
        public static final int TextAreaView_cursorMinWidth = 45;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#cursorVisible}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:cursorVisible
        */
        public static final int TextAreaView_cursorVisible = 52;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#editable}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:editable
        */
        public static final int TextAreaView_editable = 21;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#fontFamily}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:fontFamily
        */
        public static final int TextAreaView_fontFamily = 51;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#gravity}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.









        </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.









        </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          @attr name com.maizer.text.test:gravity
        */
        public static final int TextAreaView_gravity = 3;
        /**
          <p>
          @attr description
           Hint text to display when the text is empty. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.maizer.text.test:hint
        */
        public static final int TextAreaView_hint = 16;
        /**
          <p>
          @attr description
           Hint Text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.maizer.text.test:hintColor
        */
        public static final int TextAreaView_hintColor = 17;
        /**
          <p>
          @attr description
           Hint Text size. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.maizer.text.test:hintSize
        */
        public static final int TextAreaView_hintSize = 19;
        /**
          <p>
          @attr description
          
             Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
             used when an input method is connected to the text view.









        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.maizer.text.test:imeActionId
        */
        public static final int TextAreaView_imeActionId = 58;
        /**
          <p>
          @attr description
          
             Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
             used when an input method is connected to the text view.









        


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.maizer.text.test:imeActionLabel
        */
        public static final int TextAreaView_imeActionLabel = 57;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#imeOptions}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0x00000000</td><td> There are no special semantics associated with this editor. </td></tr>
<tr><td><code>actionUnspecified</code></td><td>0x00000000</td><td>
             There is no specific action associated with this editor, let the
             editor come up with its own if it can.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_NULL}.









        </td></tr>
<tr><td><code>actionNone</code></td><td>0x00000001</td><td>
             This editor has no action associated with it.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}.









        </td></tr>
<tr><td><code>actionGo</code></td><td>0x00000002</td><td>
             The action key performs a "go"
             operation to take the user to the target of the text they typed.
             Typically used, for example, when entering a URL.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}.









        </td></tr>
<tr><td><code>actionSearch</code></td><td>0x00000003</td><td>
             The action key performs a "search"
             operation, taking the user to the results of searching for the text
             the have typed (in whatever context is appropriate).
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}.









        </td></tr>
<tr><td><code>actionSend</code></td><td>0x00000004</td><td>
             The action key performs a "send"
             operation, delivering the text to its target.  This is typically used
             when composing a message.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}.









        </td></tr>
<tr><td><code>actionNext</code></td><td>0x00000005</td><td>
             The action key performs a "next"
             operation, taking the user to the next field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}.









        </td></tr>
<tr><td><code>actionDone</code></td><td>0x00000006</td><td>
             The action key performs a "done"
             operation, closing the soft input method.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}.









        </td></tr>
<tr><td><code>actionPrevious</code></td><td>0x00000007</td><td>
             The action key performs a "previous"
             operation, taking the user to the previous field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_PREVIOUS}.









        </td></tr>
<tr><td><code>flagNoFullscreen</code></td><td>0x2000000</td><td>
             Used to request that the IME never go
             into fullscreen mode.  Applications need to be aware that the flag is not
             a guarantee, and not all IMEs will respect it.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}.









        </td></tr>
<tr><td><code>flagNavigatePrevious</code></td><td>0x4000000</td><td>
             Like flagNavigateNext, but
             specifies there is something interesting that a backward navigation
             can focus on.  If the user selects the IME's facility to backward
             navigate, this will show up in the application as an actionPrevious
             at {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}.











        </td></tr>
<tr><td><code>flagNavigateNext</code></td><td>0x8000000</td><td>
             Used to specify that there is something
             interesting that a forward navigation can focus on. This is like using
             actionNext, except allows the IME to be multiline (with
             an enter key) as well as provide forward navigation.  Note that some
             IMEs may not be able to do this, especially when running on a small
             screen where there is little space.  In that case it does not need to
             present a UI for this option.  Like actionNext, if the
             user selects the IME's facility to forward navigate, this will show up
             in the application at
             {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NAVIGATE_NEXT}.











        </td></tr>
<tr><td><code>flagNoExtractUi</code></td><td>0x10000000</td><td>
             Used to specify that the IME does not need
             to show its extracted text UI.  For input methods that may be fullscreen,
             often when in landscape mode, this allows them to be smaller and let part
             of the application be shown behind.  Though there will likely be limited
             access to the application available from the user, it can make the
             experience of a (mostly) fullscreen IME less jarring.  Note that when
             this flag is specified the IME may <em>not</em> be set up to be able
             to display text, so it should only be used in situations where this is
             not needed.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}.









        </td></tr>
<tr><td><code>flagNoAccessoryAction</code></td><td>0x20000000</td><td>
             Used in conjunction with a custom action, this indicates that the
             action should not be available as an accessory button when the
             input method is full-screen.
             Note that by setting this flag, there can be cases where the action
             is simply never available to the user.  Setting this generally means
             that you think showing text being edited is more important than the
             action you have supplied.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}.









        </td></tr>
<tr><td><code>flagNoEnterAction</code></td><td>0x40000000</td><td>
             Used in conjunction with a custom action,
             this indicates that the action should not be available in-line as
             a replacement for the "enter" key.  Typically this is
             because the action has such a significant impact or is not recoverable
             enough that accidentally hitting it should be avoided, such as sending
             a message.    Note that {@link android.widget.TextView} will
             automatically set this flag for you on multi-line text views.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}.









        </td></tr>
<tr><td><code>flagForceAscii</code></td><td>0x80000000</td><td>
             Used to request that the IME should be capable of inputting ASCII
             characters.  The intention of this flag is to ensure that the user
             can type Roman alphabet characters in a {@link android.widget.TextView}
             used for, typically, account ID or password input.  It is expected that IMEs
             normally are able to input ASCII even without being told so (such IMEs
             already respect this flag in a sense), but there could be some cases they
             aren't when, for instance, only non-ASCII input languagaes like Arabic,
             Greek, Hebrew, Russian are enabled in the IME.  Applications need to be
             aware that the flag is not a guarantee, and not all IMEs will respect it.
             However, it is strongly recommended for IME authors to respect this flag
             especially when their IME could end up with a state that has only non-ASCII
             input languages enabled.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_FORCE_ASCII}.









        </td></tr>
</table>
          @attr name com.maizer.text.test:imeOptions
        */
        public static final int TextAreaView_imeOptions = 1;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#initArraySize}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:initArraySize
        */
        public static final int TextAreaView_initArraySize = 11;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#inputType}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type.  The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td>
             Just plain old text.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}.









        </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td>
             Can be combined with <var>text</var> and its variations to
             request capitalization of all characters.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}.







        </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td>
             Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every word.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}.







        </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td>
             Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every sentence.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}.







        </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td>
             Can be combined with <var>text</var> and its variations to
             request auto-correction of text being input.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}.







        </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td>
             Can be combined with <var>text</var> and its variations to
             specify that this field will be doing its own auto-completion and
             talking with the input method appropriately.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}.







        </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td>
             Can be combined with <var>text</var> and its variations to
             allow multiple lines of text in the field.  If this flag is not set,
             the text field will be constrained to a single line.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}.







        </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td>
             Can be combined with <var>text</var> and its variations to
             indicate that though the regular text view should not be multiple
             lines, the IME should provide multiple lines if it can.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}.







        </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td>
             Can be combined with <var>text</var> and its variations to
             indicate that the IME should not show any
             dictionary-based word suggestions.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}.







        </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td>
             Text that will be used as a URI.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}.







        </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td>
             Text that will be used as an e-mail address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}.







        </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td>
             Text that is being supplied as the subject of an e-mail.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}.







        </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td>
             Text that is the content of a short message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}.







        </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td>
             Text that is the content of a long message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}.







        </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td>
             Text that is the name of a person.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}.







        </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td>
             Text that is being supplied as a postal mailing address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}.







        </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td>
             Text that is a password.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}.







        </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td>
             Text that is a password that should be visible.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}.







        </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td>
             Text that is being supplied as text in a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}.







        </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td>
             Text that is filtering some other data.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}.









        </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td>
             Text that is for phonetic pronunciation, such as a phonetic name
             field in a contact entry.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}.









        </td></tr>
<tr><td><code>textWebEmailAddress</code></td><td>0x000000d1</td><td>
             Text that will be used as an e-mail address on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS}.









        </td></tr>
<tr><td><code>textWebPassword</code></td><td>0x000000e1</td><td>
             Text that will be used as a password on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_PASSWORD}.









        </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td>
             A numeric only field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_NORMAL}.









        </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td>
             Can be combined with <var>number</var> and its other options to
             allow a signed number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}.









        </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td>
             Can be combined with <var>number</var> and its other options to
             allow a decimal (fractional) number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}.









        </td></tr>
<tr><td><code>numberPassword</code></td><td>0x00000012</td><td>
             A numeric password field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_PASSWORD}.









        </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td>
             For entering a phone number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_PHONE}.









        </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td>
             For entering a date and time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}.









        </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td>
             For entering a date.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}.









        </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td>
             For entering a time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}.









        </td></tr>
</table>
          @attr name com.maizer.text.test:inputType
        */
        public static final int TextAreaView_inputType = 0;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#letterSpacing}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:letterSpacing
        */
        public static final int TextAreaView_letterSpacing = 6;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#lineSpacing_Add}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:lineSpacing_Add
        */
        public static final int TextAreaView_lineSpacing_Add = 7;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#lineSpacing_Mult}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:lineSpacing_Mult
        */
        public static final int TextAreaView_lineSpacing_Mult = 8;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#maxEms}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:maxEms
        */
        public static final int TextAreaView_maxEms = 4;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#maxLines}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:maxLines
        */
        public static final int TextAreaView_maxLines = 10;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#maxLines_limitheight}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:maxLines_limitheight
        */
        public static final int TextAreaView_maxLines_limitheight = 9;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#nextFocusBottom}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.maizer.text.test:nextFocusBottom
        */
        public static final int TextAreaView_nextFocusBottom = 50;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#nextFocusLeft}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.maizer.text.test:nextFocusLeft
        */
        public static final int TextAreaView_nextFocusLeft = 47;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#nextFocusRight}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.maizer.text.test:nextFocusRight
        */
        public static final int TextAreaView_nextFocusRight = 48;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#nextFocusTop}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.maizer.text.test:nextFocusTop
        */
        public static final int TextAreaView_nextFocusTop = 49;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#outTouch}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:outTouch
        */
        public static final int TextAreaView_outTouch = 24;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#phoneNumber}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:phoneNumber
        */
        public static final int TextAreaView_phoneNumber = 53;
        /**
          <p>
          @attr description
          
             An addition content type description to supply to the input
             method attached to the text view, which is private to the
             implementation of the input method.  This simply fills in
             the {@link android.view.inputmethod.EditorInfo#privateImeOptions
             EditorInfo.privateImeOptions} field when the input
             method is connected.









        


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.maizer.text.test:privateImeOptions
        */
        public static final int TextAreaView_privateImeOptions = 56;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#receiveOutTouch}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:receiveOutTouch
        */
        public static final int TextAreaView_receiveOutTouch = 5;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#scaleBase}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>width</code></td><td>0</td><td></td></tr>
<tr><td><code>height</code></td><td>1</td><td></td></tr>
</table>
          @attr name com.maizer.text.test:scaleBase
        */
        public static final int TextAreaView_scaleBase = 18;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#seletable}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:seletable
        */
        public static final int TextAreaView_seletable = 23;
        /**
          <p>
          @attr description
           @hide 是否共享游标,默认为共享的,我将隐藏,不建议设置 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.maizer.text.test:shareCursorDevicer
        */
        public static final int TextAreaView_shareCursorDevicer = 22;
        /**
          <p>
          @attr description
           Text to display. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.maizer.text.test:text
        */
        public static final int TextAreaView_text = 13;
        /**
          <p>
          @attr description
           Text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.maizer.text.test:textColor
        */
        public static final int TextAreaView_textColor = 15;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#textColorLink}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name com.maizer.text.test:textColorLink
        */
        public static final int TextAreaView_textColorLink = 20;
        /**
          <p>
          @attr description
           Color of the text selection highlight. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.maizer.text.test:textHighlightDrawable
        */
        public static final int TextAreaView_textHighlightDrawable = 43;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#textScaleX}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.maizer.text.test:textScaleX
        */
        public static final int TextAreaView_textScaleX = 46;
        /**
          <p>
          @attr description
           Text size. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.maizer.text.test:textSize
        */
        public static final int TextAreaView_textSize = 14;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#textStyle}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
          @attr name com.maizer.text.test:textStyle
        */
        public static final int TextAreaView_textStyle = 2;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#truncateAt}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>start</code></td><td>1</td><td></td></tr>
<tr><td><code>end</code></td><td>2</td><td></td></tr>
<tr><td><code>middle</code></td><td>3</td><td></td></tr>
<tr><td><code>marquee</code></td><td>4</td><td></td></tr>
</table>
          @attr name com.maizer.text.test:truncateAt
        */
        public static final int TextAreaView_truncateAt = 12;
        /**
          <p>This symbol is the offset where the {@link com.maizer.text.test.R.attr#typeface}
          attribute's value can be found in the {@link #TextAreaView} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
          @attr name com.maizer.text.test:typeface
        */
        public static final int TextAreaView_typeface = 55;
    };
}
